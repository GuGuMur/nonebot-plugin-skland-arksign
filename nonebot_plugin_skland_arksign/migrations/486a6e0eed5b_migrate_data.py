"""migrate data

迁移 ID: 486a6e0eed5b
父迁移: 4bc53bd04337
创建时间: 2024-01-14 17:41:09.708856

"""

from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.orm import Session
from nonebot import logger, require
from sqlalchemy import Connection, inspect
from sqlalchemy.ext.automap import automap_base
from sqlalchemy.ext.asyncio import AsyncConnection

revision: str = "486a6e0eed5b"
down_revision: str | Sequence[str] | None = "4bc53bd04337"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def _migrate_old_data(ds_conn: Connection):
    insp = inspect(ds_conn)
    if "nonebot_plugin_skland_arksign_alembic_version" not in insp.get_table_names():
        logger.warning("skland_arksign: 未发现来自 datastore 的数据，跳过迁移")
        return

    logger.info("skland_arksign: 迁移来自 datastore 的数据")
    # 检查是否存在旧数据
    version_num = ds_conn.scalars(
        sa.text("SELECT version_num FROM nonebot_plugin_skland_arksign_alembic_version")
    ).one_or_none()
    if version_num != "d89239244530":
        logger.error(
            "skland_arksign: datastore 数据库中存在旧数据，但不是最新版本，无法迁移。\n"
            "请先安装 nonebot_plugin_skland_arksign 0.6.5 版本，运行 nb datastore upgrade 后再次尝试"
        )
        raise RuntimeError("skland_arksign: datastore 数据库中存在旧数据，但不是最新版本，无法迁移")

    DsBase = automap_base()
    DsBase.prepare(autoload_with=ds_conn)
    DsSklandSubscribe = DsBase.classes.skland_subscribe

    Base = automap_base()
    Base.prepare(autoload_with=op.get_bind())
    SklandSubscribe = Base.classes.skland_subscribe

    ds_session = Session(ds_conn)
    session = Session(op.get_bind())

    # 写入数据
    logger.info("skland_arksign: 发现来自 datastore 的数据，开始迁移...")
    for ds_sub in ds_session.query(DsSklandSubscribe).all():
        sub = SklandSubscribe(
            uid=ds_sub.uid,
            user=ds_sub.user,
            cred=ds_sub.cred,
            token=ds_sub.token,
            note=ds_sub.note,
        )
        session.add(sub)
    session.commit()
    logger.opt(colors=True).success("skland_arksign: 迁移完成！")


async def data_migrate(coon: AsyncConnection):
    from nonebot_plugin_datastore.db import get_engine

    async with get_engine().connect() as ds_conn:
        await ds_conn.run_sync(_migrate_old_data)


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        require("nonebot_plugin_datastore")
    except RuntimeError:
        return

    op.run_async(data_migrate)
    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
